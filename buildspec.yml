version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto21
  pre_build:
    commands:
      - java -version
      - mvn -version
      - echo Logging in to Amazon ECR...
      - aws --version
      #- $(aws ecr get-login --region ap-southeast-2 --no-include-email
      - aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 442426855749.dkr.ecr.ap-southeast-2.amazonaws.com
      - REPOSITORY_URI=442426855749.dkr.ecr.ap-southeast-2.amazonaws.com/docker/springboot
      - POSTGRES_REPOSITORY_URI=442426855749.dkr.ecr.ap-southeast-2.amazonaws.com/docker/postgres
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - echo Pulling PostgreSQL image...
      - docker pull postgres:17
      - echo Starting PostgreSQL container...
      - docker run --rm --name postgres_db -p 5432:5432 -e POSTGRES_DB=nrl-prediction -e POSTGRES_USER=nrl_user -e POSTGRES_PASSWORD=nrl_password -d postgres:17
      - echo Waiting for PostgreSQL to be ready...
      - until docker exec postgres_db pg_isready -U nrl_user; do sleep 2; done
      - echo PostgreSQL is ready!
      - echo Copying database dump into PostgreSQL container...
      - docker cp misc/nrl-prediction-dump.sql postgres_db:/nrl-prediction-dump.sql
      - echo Creating postgres role...
      - docker exec postgres_db sh -c "psql -U nrl_user -d nrl-prediction -c 'CREATE ROLE postgres;'"
      - echo Restoring database dump using pg_restore...
      - docker exec postgres_db sh -c "pg_restore -U nrl_user -d nrl-prediction /nrl-prediction-dump.sql"
  build:
    commands:
      - echo Build started on `date`
      - echo building the Jar file
      - mvn clean package
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - echo Tagging PostgreSQL container for ECR...
      - docker commit postgres_db $POSTGRES_REPOSITORY_URI:latest
      - docker tag $POSTGRES_REPOSITORY_URI:latest $POSTGRES_REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Build started on `date`
      - echo pushing to repo
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Pushing PostgreSQL image to ECR...
      - docker push $POSTGRES_REPOSITORY_URI:latest
      - docker push $POSTGRES_REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - DOCKER_CONTAINER_NAME=nrl-api
      - POSTGRES_CONTAINER_NAME=postgres
      - printf '[{"name":"%s","imageUri":"%s"},{"name":"%s","imageUri":"%s"}]' \
        $DOCKER_CONTAINER_NAME $SPRINGBOOT_REPOSITORY_URI:$IMAGE_TAG \
        $POSTGRES_CONTAINER_NAME $POSTGRES_REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Printing imagedefinitions.json...
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - target/nrl-api-0.0.1-SNAPSHOT.jar
